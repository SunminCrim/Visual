[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "My name is Sunmin Hong, and I’m a third year doctoral candidate in criminology and criminal justice program at UT Dallas.\n\nMore Information\nResearch Interests:\n\nCybercrimes\nCriminal Justice Policies\nEnvironmental Criminology\n\n\n\nContact me\n[sunmin.hong@utdallas.edu]"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "This repository contains my submission for Assignment 1.\n\nAnscombe’s quartet\n\n\n#options(repos = c(CRAN = \"https://cran.rstudio.com/\"))\ndata(anscombe)  # Load Anscombe's data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n\n\nGenerative Art (Fall Color)\n\n\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\nn &lt;- 100\nangles &lt;- seq(0, 2*pi, length.out = n)\nx &lt;- cos(angles)\ny &lt;- sin(angles)\ndf &lt;- data.frame(\n  x = x * seq(0.1, 1, length.out = n),\n  y = y * seq(0.1, 1, length.out = n),\n  size = seq(1, 10, length.out = n)\n)\nggplot(df, aes(x = x, y = y)) +\n  geom_point(aes(size = size), shape = 21, fill = \"lightblue\", color = \"black\", alpha = 0.6) +\n  theme_void() + \n  coord_fixed()\n\n\n\n\n\nRun Fall.R\n\n\n# Install packages\n#install.packages(c(\"gsubfn\", \"proto\", \"tidyverse\"))\n\nlibrary(gsubfn)\n\nLoading required package: proto\n\n\nWarning in doTryCatch(return(expr), name, parentenv, handler): unable to load shared object '/Library/Frameworks/R.framework/Resources/modules//R_X11.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 0x0006): Library not loaded: '/opt/X11/lib/libSM.6.dylib'\n  Referenced from: '/Library/Frameworks/R.framework/Versions/4.2/Resources/modules/R_X11.so'\n  Reason: tried: '/opt/X11/lib/libSM.6.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libSM.6.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home/jre/lib/server/libSM.6.dylib' (no such file)\n\n\ntcltk DLL is linked to '/opt/X11/lib/libX11.6.dylib'\n\n\nCould not load tcltk.  Will use slower R code instead.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Winter (Modified)\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n# Generating data\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\n# Plot with Winter Color Palette\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"lightblue\", # Winter color theme (modified)\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes\n\n\n\n\n\nChart Critique\n\nChart Critique: “U.S. Unemployment Rate by Race” from the New York Times Source: New York Times Chart Type: Line Chart\nStrengths: Clear Trend Representation: Effectively shows changes in unemployment rates over time for different racial groups. Distinct Colors: Colors clearly differentiate the racial groups. Appropriate Time-Series Chart: Suitable for visualizing unemployment trends over several years. Areas for Improvement: Overlapping Lines: Similar unemployment rates across groups cause overlap, making it hard to distinguish lines. Lack of Data Markers: Adding markers at key points (e.g., during the COVID-19 spike) would enhance readability. Legend Placement: The distant legend forces viewers to switch focus between the chart and legend. Axes Labels: More granular y-axis labels (e.g., showing increments of 0.5%) would improve precision. Suggested Improvements: Add data markers and reduce line overlap with transparency or alternative line styles. Move the legend closer to the chart or label lines directly for easier interpretation. Include more precise axis labels for clearer comparisons."
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "assignment2",
    "section": "",
    "text": "## 1. Scatterplot\n\n# Prepare data\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, 0.8, 0.5, 0.45, 0.4, 0.3)\n\n# Create scatterplot\nplot(x, y1, type=\"b\", pch=16, col=\"blue\", ylim=c(0, 6), \n     xlab=\"X values\", ylab=\"Y values\", main=\"Scatterplot Example\")\nlines(x, y2, type=\"b\", pch=21, col=\"red\", bg=\"white\")\nlegend(\"topright\", legend=c(\"y1\", \"y2\"), col=c(\"blue\", \"red\"), pch=c(16, 21))\n\n\n\n\n\n# Generate data\nY &lt;- rnorm(50)\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA  # Select values within -3.5 to 3.5\nx &lt;- seq(-3.5, 3.5, 0.1)\ndn &lt;- dnorm(x)\n\n# Create histogram\nhist(Y, breaks=seq(-3.5, 3.5, by=0.5), col=\"gray80\", freq=FALSE,\n     main=\"Histogram with Normal Distribution\", xlab=\"Y Values\", ylim=c(0, 0.5))\nlines(x, dnorm(x), col=\"red\", lwd=2)\n\n\n\n\n\n# Use dataset\ndata(\"VADeaths\")\n\n# Create barplot\nmidpts &lt;- barplot(VADeaths, col=gray(0.1 + seq(1, 9, 2)/11), \n                  main=\"VA Deaths Barplot\", ylab=\"Death Rate\", beside=TRUE)\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)), at=midpts, side=1, line=0.5, cex=0.5)\n\n\n\n\n\n# Use dataset\ndata(\"ToothGrowth\")\n\n# Create boxplot\nboxplot(len ~ dose, data=ToothGrowth, subset=supp==\"VC\",\n        col=\"white\", xlab=\"Vitamin C dose (mg)\", ylab=\"Tooth Length\",\n        main=\"Boxplot of Tooth Length by Dose (VC)\")\nboxplot(len ~ dose, data=ToothGrowth, add=TRUE, subset=supp==\"OJ\", col=\"gray\")\nlegend(\"topright\", legend=c(\"Ascorbic acid\", \"Orange juice\"), fill=c(\"white\", \"gray\"))\n\n\n\n\n\n# Generate data\nx &lt;- seq(-10, 10, length=30)\ny &lt;- x\nf &lt;- function(x, y) { r &lt;- sqrt(x^2 + y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n\n# Create 3D perspective plot\npersp(x, y, z, theta=30, phi=30, expand=0.5, col=\"lightblue\", main=\"3D Perspective Plot\")\n\n\n\n\n\n# Generate data\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\", \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\n\n# Create pie chart\npie(pie.sales, col=gray(seq(0.3, 1.0, length=6)), main=\"Sales Distribution Pie Chart\")"
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "assignment3",
    "section": "",
    "text": "# Scatterplot example from murrell01.R\n\n# Defining data points\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting parameters: orientation (las=1), margins (mar=c(4, 4, 2, 4)), and text size (cex=0.7)\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \n\n# Setting up an empty plot window\nplot.new()\nplot.window(range(x), c(0, 6))\n\n# Adding lines for y1 and y2 data points\nlines(x, y1)\nlines(x, y2)\n\n# Adding points with different symbols and sizes\npoints(x, y1, pch=16, cex=2) # Solid circles with larger size\npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Circles with white background\n\n# Setting color for plot elements\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\n\n# Adding x and y axes with custom intervals\naxis(1, at=seq(0, 16, 4)) # X-axis with ticks from 0 to 16, step 4\naxis(2, at=seq(0, 6, 2))  # Left y-axis with ticks from 0 to 6, step 2\naxis(4, at=seq(0, 6, 2))  # Right y-axis with the same tick interval\n\n# Adding a box around the plot with 'u'-shaped corners\nbox(bty=\"u\")\n\n# Adding axis labels\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8) # X-axis label\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8) # Left y-axis label\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8) # Right y-axis label\n\n# Adding text annotation\ntext(4, 5, \"Bird 131\") \n\n\n\n# Resetting parameters\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")"
  },
  {
    "objectID": "assignment3.html#rerun-murrell01.r",
    "href": "assignment3.html#rerun-murrell01.r",
    "title": "assignment3",
    "section": "",
    "text": "# Scatterplot example from murrell01.R\n\n# Defining data points\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting parameters: orientation (las=1), margins (mar=c(4, 4, 2, 4)), and text size (cex=0.7)\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \n\n# Setting up an empty plot window\nplot.new()\nplot.window(range(x), c(0, 6))\n\n# Adding lines for y1 and y2 data points\nlines(x, y1)\nlines(x, y2)\n\n# Adding points with different symbols and sizes\npoints(x, y1, pch=16, cex=2) # Solid circles with larger size\npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Circles with white background\n\n# Setting color for plot elements\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\n\n# Adding x and y axes with custom intervals\naxis(1, at=seq(0, 16, 4)) # X-axis with ticks from 0 to 16, step 4\naxis(2, at=seq(0, 6, 2))  # Left y-axis with ticks from 0 to 6, step 2\naxis(4, at=seq(0, 6, 2))  # Right y-axis with the same tick interval\n\n# Adding a box around the plot with 'u'-shaped corners\nbox(bty=\"u\")\n\n# Adding axis labels\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8) # X-axis label\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8) # Left y-axis label\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8) # Right y-axis label\n\n# Adding text annotation\ntext(4, 5, \"Bird 131\") \n\n\n\n# Resetting parameters\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")"
  },
  {
    "objectID": "assignment3.html#rerun-anscombe01.r",
    "href": "assignment3.html#rerun-anscombe01.r",
    "title": "assignment3",
    "section": "2. Rerun anscombe01.R",
    "text": "2. Rerun anscombe01.R\n\na. Compare the regression models\nThe Anscombe dataset consists of four sets of (x, y) pairs that are nearly identical in their statistical properties but differ greatly in graphical representation.\n\n# Load Anscombe data\ndata(anscombe)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create and summarize four linear models\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\n\n\nb. Compare different ways to create the plots\n\n# Plot all four datasets and their regression lines\npar(mfrow=c(2, 2)) # 2x2 layout for multiple plots\n\nplot(anscombe$x1, anscombe$y1, main=\"Dataset 1\", pch=16, col=\"blue\")\nabline(lm1, col=\"red\", lty=2)\n\nplot(anscombe$x2, anscombe$y2, main=\"Dataset 2\", pch=17, col=\"green\")\nabline(lm2, col=\"red\", lty=2)\n\nplot(anscombe$x3, anscombe$y3, main=\"Dataset 3\", pch=15, col=\"purple\")\nabline(lm3, col=\"red\", lty=2)\n\nplot(anscombe$x4, anscombe$y4, main=\"Dataset 4\", pch=18, col=\"orange\")\nabline(lm4, col=\"red\", lty=2)"
  },
  {
    "objectID": "assignment3.html#fine-tune-the-charts-without-using-other-packages-consult-rgraphics-by-murrell",
    "href": "assignment3.html#fine-tune-the-charts-without-using-other-packages-consult-rgraphics-by-murrell",
    "title": "assignment3",
    "section": "3. Fine-tune the charts without using other packages (consult RGraphics by Murrell)",
    "text": "3. Fine-tune the charts without using other packages (consult RGraphics by Murrell)\n\na. Using a serif font, non-default colors, and custom plotting character\n\n# Example of fine-tuning using base R\npar(family = \"serif\", col=\"darkblue\", pch=8) \nplot(anscombe$x1, anscombe$y1, main=\"Fine-tuned Plot\", xlab=\"X1\", ylab=\"Y1\")\nabline(lm1, col=\"red\", lwd=2)"
  },
  {
    "objectID": "assignment3.html#create-charts-using-ggplot2-use-tidyverse-package",
    "href": "assignment3.html#create-charts-using-ggplot2-use-tidyverse-package",
    "title": "assignment3",
    "section": "4. Create charts using ggplot2 (use tidyverse package)",
    "text": "4. Create charts using ggplot2 (use tidyverse package)\n\nlibrary(ggplot2)\n\n# Create a combined dataset for ggplot2\nanscombe_long &lt;- data.frame(\n  x = c(anscombe$x1, anscombe$x2, anscombe$x3, anscombe$x4),\n  y = c(anscombe$y1, anscombe$y2, anscombe$y3, anscombe$y4),\n  group = factor(rep(1:4, each = nrow(anscombe)))\n)\n\n# Plot using ggplot2\nggplot(anscombe_long, aes(x = x, y = y)) +\n  geom_point(shape = 21, fill = \"orange\", color = \"red\", size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\", linetype = \"dashed\") +\n  facet_wrap(~ group, ncol = 2) +\n  labs(title = \"Anscombe's Quartet\", x = \"X Values\", y = \"Y Values\") +\n  theme_minimal(base_family = \"serif\")\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "assignmnet5.html",
    "href": "assignmnet5.html",
    "title": "assignment5",
    "section": "",
    "text": "1. Create charts using base R graphics\n\nlibrary(datasets)\n# a. Histogram\nhist(mtcars$mpg, \n     main=\"Histogram of MPG\",\n     xlab=\"Miles Per Gallon\",\n     col=\"skyblue\",\n     border=\"white\",\n     breaks=20)\n\n\n\n# b. Barchart (Vertical)\nbarplot(table(mtcars$cyl), \n        main=\"Number of Cars by Cylinder\",\n        xlab=\"Number of Cylinders\",\n        ylab=\"Count\",\n        col=c(\"coral\", \"lightgreen\", \"lightblue\"),\n        border=\"white\")\n\n\n\n# Horizontal Barchart\nbarplot(sort(tapply(mtcars$mpg, mtcars$cyl, mean)),\n        main=\"Average MPG by Cylinder\",\n        xlab=\"Average MPG\",\n        ylab=\"Number of Cylinders\",\n        col=c(\"lightblue\", \"lightgreen\", \"coral\"),\n        border=\"white\",\n        horiz=TRUE)\n\n\n\n# c. Piechart\npie(table(mtcars$gear), \n    main=\"Distribution of Gear Types\",\n    col=c(\"lightblue\", \"lightgreen\", \"coral\"),\n    border=\"white\",\n    labels=paste0(names(table(mtcars$gear)), \"\\n\", table(mtcars$gear)))\n\n\n\n# d. Boxplot\nboxplot(mpg ~ cyl, data=mtcars,\n        main=\"MPG by Number of Cylinders\",\n        xlab=\"Number of Cylinders\",\n        ylab=\"Miles Per Gallon\",\n        col=c(\"lightblue\", \"lightgreen\", \"coral\"),\n        border=\"darkgray\")\n\n\n\n# e. Scatterplot\nplot(mtcars$wt, mtcars$mpg, \n     main=\"Weight vs MPG\",\n     xlab=\"Weight (1000 lbs)\",\n     ylab=\"Miles Per Gallon\",\n     pch=21,\n     bg=heat.colors(32),\n     cex=1.5)\n\n\n\n\n\n\n2. Repeat using ggplot2\n\nlibrary(ggplot2)\n\n# Histogram\nggplot(mtcars, aes(x=mpg)) +\n  geom_histogram(fill=\"skyblue\", color=\"white\", bins=20) +\n  labs(title=\"Histogram of MPG\", x=\"Miles Per Gallon\", y=\"Count\") +\n  theme_minimal()\n\n\n\n# Vertical Barchart\nggplot(mtcars, aes(x=factor(cyl))) +\n  geom_bar(fill=c(\"coral\", \"lightgreen\", \"lightblue\")) +\n  labs(title=\"Number of Cars by Cylinder\", x=\"Number of Cylinders\", y=\"Count\") +\n  theme_minimal()\n\n\n\n# Horizontal Barchart\nggplot(mtcars, aes(x=factor(cyl), y=mpg)) +\n  stat_summary(fun=\"mean\", geom=\"bar\", fill=c(\"lightblue\", \"lightgreen\", \"coral\")) +\n  coord_flip() +\n  labs(title=\"Average MPG by Cylinder\", x=\"Number of Cylinders\", y=\"Average MPG\") +\n  theme_minimal()\n\n\n\n# Piechart\nggplot(mtcars, aes(x=\"\", fill=factor(gear))) +\n  geom_bar(width=1, stat=\"count\") +\n  coord_polar(\"y\", start=0) +\n  labs(title=\"Distribution of Gear Types\", fill=\"Gear\") +\n  theme_void() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\n\n\n\n# Boxplot\nggplot(mtcars, aes(x=factor(cyl), y=mpg, fill=factor(cyl))) +\n  geom_boxplot() +\n  labs(title=\"MPG by Number of Cylinders\", x=\"Number of Cylinders\", y=\"Miles Per Gallon\") +\n  theme_minimal() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\n\n\n\n# Scatterplot\nggplot(mtcars, aes(x=wt, y=mpg)) +\n  geom_point(aes(color=mpg), size=3) +\n  scale_color_gradientn(colors=heat.colors(10)) +\n  labs(title=\"Weight vs MPG\", x=\"Weight (1000 lbs)\", y=\"Miles Per Gallon\") +\n  theme_minimal()\n\n\n\n\n\n\n3. Export charts\n\nlibrary(ggplot2)\n\nsave_plot &lt;- function(plot, name, width = 800, height = 600) {\n  # PDF\n  pdf(paste0(name, \".pdf\"), width = width/72, height = height/72)\n  print(plot)\n  dev.off()\n  \n  # JPG\n  jpeg(paste0(name, \".jpg\"), width = width, height = height, quality = 100)\n  print(plot)\n  dev.off()\n  \n  # SVG\n  svg(paste0(name, \".svg\"), width = width/72, height = height/72)\n  print(plot)\n  dev.off()\n  \n  # TIFF\n  tiff(paste0(name, \".tiff\"), width = width, height = height, compression = \"lzw\")\n  print(plot)\n  dev.off()\n  \n  # BMP\n  bmp(paste0(name, \".bmp\"), width = width, height = height)\n  print(plot)\n  dev.off()\n}\n\n# Create and save plots\n\n# 1. Histogram\nhist_plot &lt;- ggplot(mtcars, aes(x=mpg)) +\n  geom_histogram(fill=\"skyblue\", color=\"white\", bins=20) +\n  labs(title=\"Histogram of MPG\", x=\"Miles Per Gallon\", y=\"Count\") +\n  theme_minimal()\nsave_plot(hist_plot, \"histogram\")\n\nWarning in grSoftVersion(): unable to load shared object '/Library/Frameworks/R.framework/Resources/modules//R_X11.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 0x0006): Library not loaded: '/opt/X11/lib/libSM.6.dylib'\n  Referenced from: '/Library/Frameworks/R.framework/Versions/4.2/Resources/modules/R_X11.so'\n  Reason: tried: '/opt/X11/lib/libSM.6.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libSM.6.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home/jre/lib/server/libSM.6.dylib' (no such file)\n\n\nWarning in cairoVersion(): unable to load shared object '/Library/Frameworks/R.framework/Resources/library/grDevices/libs//cairo.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/library/grDevices/libs//cairo.so, 0x0006): Library not loaded: '/opt/X11/lib/libXrender.1.dylib'\n  Referenced from: '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/grDevices/libs/cairo.so'\n  Reason: tried: '/opt/X11/lib/libXrender.1.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libXrender.1.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home/jre/lib/server/libXrender.1.dylib' (no such file)\n\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 2. Vertical Barchart\nbar_plot &lt;- ggplot(mtcars, aes(x=factor(cyl))) +\n  geom_bar(fill=c(\"coral\", \"lightgreen\", \"lightblue\")) +\n  labs(title=\"Number of Cars by Cylinder\", x=\"Number of Cylinders\", y=\"Count\") +\n  theme_minimal()\nsave_plot(bar_plot, \"barchart\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 3. Horizontal Barchart\nh_bar_plot &lt;- ggplot(mtcars, aes(x=factor(cyl), y=mpg)) +\n  stat_summary(fun=\"mean\", geom=\"bar\", fill=c(\"lightblue\", \"lightgreen\", \"coral\")) +\n  coord_flip() +\n  labs(title=\"Average MPG by Cylinder\", x=\"Number of Cylinders\", y=\"Average MPG\") +\n  theme_minimal()\nsave_plot(h_bar_plot, \"horizontal_barchart\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 4. Piechart\npie_plot &lt;- ggplot(mtcars, aes(x=\"\", fill=factor(gear))) +\n  geom_bar(width=1, stat=\"count\") +\n  coord_polar(\"y\", start=0) +\n  labs(title=\"Distribution of Gear Types\", fill=\"Gear\") +\n  theme_void() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\nsave_plot(pie_plot, \"piechart\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 5. Boxplot\nbox_plot &lt;- ggplot(mtcars, aes(x=factor(cyl), y=mpg, fill=factor(cyl))) +\n  geom_boxplot() +\n  labs(title=\"MPG by Number of Cylinders\", x=\"Number of Cylinders\", y=\"Miles Per Gallon\") +\n  theme_minimal() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\nsave_plot(box_plot, \"boxplot\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 6. Scatterplot\nscatter_plot &lt;- ggplot(mtcars, aes(x=wt, y=mpg)) +\n  geom_point(aes(color=mpg), size=3) +\n  scale_color_gradientn(colors=heat.colors(10)) +\n  labs(title=\"Weight vs MPG\", x=\"Weight (1000 lbs)\", y=\"Miles Per Gallon\") +\n  theme_minimal()\nsave_plot(scatter_plot, \"scatterplot\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\nprint(\"All plots have been saved in PDF, JPG, SVG, TIFF, and BMP formats.\")\n\n[1] \"All plots have been saved in PDF, JPG, SVG, TIFF, and BMP formats.\""
  },
  {
    "objectID": "assignmnet5.html#quarto",
    "href": "assignmnet5.html#quarto",
    "title": "assignmnet5",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "assignmnet5.html#running-code",
    "href": "assignmnet5.html#running-code",
    "title": "assignmnet5",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "assignment5.html",
    "href": "assignment5.html",
    "title": "assignment5",
    "section": "",
    "text": "1. Create charts using base R graphics\n\nlibrary(datasets)\n# a. Histogram\nhist(mtcars$mpg, \n     main=\"Histogram of MPG\",\n     xlab=\"Miles Per Gallon\",\n     col=\"skyblue\",\n     border=\"white\",\n     breaks=20)\n\n\n\n# b. Barchart (Vertical)\nbarplot(table(mtcars$cyl), \n        main=\"Number of Cars by Cylinder\",\n        xlab=\"Number of Cylinders\",\n        ylab=\"Count\",\n        col=c(\"coral\", \"lightgreen\", \"lightblue\"),\n        border=\"white\")\n\n\n\n# Horizontal Barchart\nbarplot(sort(tapply(mtcars$mpg, mtcars$cyl, mean)),\n        main=\"Average MPG by Cylinder\",\n        xlab=\"Average MPG\",\n        ylab=\"Number of Cylinders\",\n        col=c(\"lightblue\", \"lightgreen\", \"coral\"),\n        border=\"white\",\n        horiz=TRUE)\n\n\n\n# c. Piechart\npie(table(mtcars$gear), \n    main=\"Distribution of Gear Types\",\n    col=c(\"lightblue\", \"lightgreen\", \"coral\"),\n    border=\"white\",\n    labels=paste0(names(table(mtcars$gear)), \"\\n\", table(mtcars$gear)))\n\n\n\n# d. Boxplot\nboxplot(mpg ~ cyl, data=mtcars,\n        main=\"MPG by Number of Cylinders\",\n        xlab=\"Number of Cylinders\",\n        ylab=\"Miles Per Gallon\",\n        col=c(\"lightblue\", \"lightgreen\", \"coral\"),\n        border=\"darkgray\")\n\n\n\n# e. Scatterplot\nplot(mtcars$wt, mtcars$mpg, \n     main=\"Weight vs MPG\",\n     xlab=\"Weight (1000 lbs)\",\n     ylab=\"Miles Per Gallon\",\n     pch=21,\n     bg=heat.colors(32),\n     cex=1.5)\n\n\n\n\n\n\n2. Repeat using ggplot2\n\nlibrary(ggplot2)\n\n# Histogram\nggplot(mtcars, aes(x=mpg)) +\n  geom_histogram(fill=\"skyblue\", color=\"white\", bins=20) +\n  labs(title=\"Histogram of MPG\", x=\"Miles Per Gallon\", y=\"Count\") +\n  theme_minimal()\n\n\n\n# Vertical Barchart\nggplot(mtcars, aes(x=factor(cyl))) +\n  geom_bar(fill=c(\"coral\", \"lightgreen\", \"lightblue\")) +\n  labs(title=\"Number of Cars by Cylinder\", x=\"Number of Cylinders\", y=\"Count\") +\n  theme_minimal()\n\n\n\n# Horizontal Barchart\nggplot(mtcars, aes(x=factor(cyl), y=mpg)) +\n  stat_summary(fun=\"mean\", geom=\"bar\", fill=c(\"lightblue\", \"lightgreen\", \"coral\")) +\n  coord_flip() +\n  labs(title=\"Average MPG by Cylinder\", x=\"Number of Cylinders\", y=\"Average MPG\") +\n  theme_minimal()\n\n\n\n# Piechart\nggplot(mtcars, aes(x=\"\", fill=factor(gear))) +\n  geom_bar(width=1, stat=\"count\") +\n  coord_polar(\"y\", start=0) +\n  labs(title=\"Distribution of Gear Types\", fill=\"Gear\") +\n  theme_void() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\n\n\n\n# Boxplot\nggplot(mtcars, aes(x=factor(cyl), y=mpg, fill=factor(cyl))) +\n  geom_boxplot() +\n  labs(title=\"MPG by Number of Cylinders\", x=\"Number of Cylinders\", y=\"Miles Per Gallon\") +\n  theme_minimal() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\n\n\n\n# Scatterplot\nggplot(mtcars, aes(x=wt, y=mpg)) +\n  geom_point(aes(color=mpg), size=3) +\n  scale_color_gradientn(colors=heat.colors(10)) +\n  labs(title=\"Weight vs MPG\", x=\"Weight (1000 lbs)\", y=\"Miles Per Gallon\") +\n  theme_minimal()\n\n\n\n\n\n\n3. Export charts\n\nlibrary(ggplot2)\n\nsave_plot &lt;- function(plot, name, width = 800, height = 600) {\n  # PDF\n  pdf(paste0(name, \".pdf\"), width = width/72, height = height/72)\n  print(plot)\n  dev.off()\n  \n  # JPG\n  jpeg(paste0(name, \".jpg\"), width = width, height = height, quality = 100)\n  print(plot)\n  dev.off()\n  \n  # SVG\n  svg(paste0(name, \".svg\"), width = width/72, height = height/72)\n  print(plot)\n  dev.off()\n  \n  # TIFF\n  tiff(paste0(name, \".tiff\"), width = width, height = height, compression = \"lzw\")\n  print(plot)\n  dev.off()\n  \n  # BMP\n  bmp(paste0(name, \".bmp\"), width = width, height = height)\n  print(plot)\n  dev.off()\n}\n\n# Create and save plots\n\n# 1. Histogram\nhist_plot &lt;- ggplot(mtcars, aes(x=mpg)) +\n  geom_histogram(fill=\"skyblue\", color=\"white\", bins=20) +\n  labs(title=\"Histogram of MPG\", x=\"Miles Per Gallon\", y=\"Count\") +\n  theme_minimal()\nsave_plot(hist_plot, \"histogram\")\n\nWarning in grSoftVersion(): unable to load shared object '/Library/Frameworks/R.framework/Resources/modules//R_X11.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/modules//R_X11.so, 0x0006): Library not loaded: '/opt/X11/lib/libSM.6.dylib'\n  Referenced from: '/Library/Frameworks/R.framework/Versions/4.2/Resources/modules/R_X11.so'\n  Reason: tried: '/opt/X11/lib/libSM.6.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libSM.6.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home/jre/lib/server/libSM.6.dylib' (no such file)\n\n\nWarning in cairoVersion(): unable to load shared object '/Library/Frameworks/R.framework/Resources/library/grDevices/libs//cairo.so':\n  dlopen(/Library/Frameworks/R.framework/Resources/library/grDevices/libs//cairo.so, 0x0006): Library not loaded: '/opt/X11/lib/libXrender.1.dylib'\n  Referenced from: '/Library/Frameworks/R.framework/Versions/4.2/Resources/library/grDevices/libs/cairo.so'\n  Reason: tried: '/opt/X11/lib/libXrender.1.dylib' (no such file), '/Library/Frameworks/R.framework/Resources/lib/libXrender.1.dylib' (no such file), '/Library/Java/JavaVirtualMachines/jdk1.8.0_241.jdk/Contents/Home/jre/lib/server/libXrender.1.dylib' (no such file)\n\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 2. Vertical Barchart\nbar_plot &lt;- ggplot(mtcars, aes(x=factor(cyl))) +\n  geom_bar(fill=c(\"coral\", \"lightgreen\", \"lightblue\")) +\n  labs(title=\"Number of Cars by Cylinder\", x=\"Number of Cylinders\", y=\"Count\") +\n  theme_minimal()\nsave_plot(bar_plot, \"barchart\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 3. Horizontal Barchart\nh_bar_plot &lt;- ggplot(mtcars, aes(x=factor(cyl), y=mpg)) +\n  stat_summary(fun=\"mean\", geom=\"bar\", fill=c(\"lightblue\", \"lightgreen\", \"coral\")) +\n  coord_flip() +\n  labs(title=\"Average MPG by Cylinder\", x=\"Number of Cylinders\", y=\"Average MPG\") +\n  theme_minimal()\nsave_plot(h_bar_plot, \"horizontal_barchart\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 4. Piechart\npie_plot &lt;- ggplot(mtcars, aes(x=\"\", fill=factor(gear))) +\n  geom_bar(width=1, stat=\"count\") +\n  coord_polar(\"y\", start=0) +\n  labs(title=\"Distribution of Gear Types\", fill=\"Gear\") +\n  theme_void() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\nsave_plot(pie_plot, \"piechart\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 5. Boxplot\nbox_plot &lt;- ggplot(mtcars, aes(x=factor(cyl), y=mpg, fill=factor(cyl))) +\n  geom_boxplot() +\n  labs(title=\"MPG by Number of Cylinders\", x=\"Number of Cylinders\", y=\"Miles Per Gallon\") +\n  theme_minimal() +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"coral\"))\nsave_plot(box_plot, \"boxplot\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\n# 6. Scatterplot\nscatter_plot &lt;- ggplot(mtcars, aes(x=wt, y=mpg)) +\n  geom_point(aes(color=mpg), size=3) +\n  scale_color_gradientn(colors=heat.colors(10)) +\n  labs(title=\"Weight vs MPG\", x=\"Weight (1000 lbs)\", y=\"Miles Per Gallon\") +\n  theme_minimal()\nsave_plot(scatter_plot, \"scatterplot\")\n\nWarning in svg(paste0(name, \".svg\"), width = width/72, height = height/72):\nfailed to load cairo DLL\n\n\nnull device \n          1 \n\nprint(\"All plots have been saved in PDF, JPG, SVG, TIFF, and BMP formats.\")\n\n[1] \"All plots have been saved in PDF, JPG, SVG, TIFF, and BMP formats.\""
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "assignment4",
    "section": "",
    "text": "library(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nset.seed(123)\ndata1 &lt;- data.frame(\n  category = LETTERS[1:5],\n  value1 = sample(20:100, 5),\n  value2 = sample(20:100, 5)\n)\n\nchart1 &lt;- ggplot(data1, aes(x = category)) +\n  geom_bar(aes(y = value1, fill = \"Value 1\"), stat = \"identity\", position = \"dodge\") +\n  geom_bar(aes(y = value2, fill = \"Value 2\"), stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Two Variables Bar Chart\", x = \"Category\", y = \"Value\") +\n  scale_fill_manual(values = c(\"Value 1\" = \"skyblue\", \"Value 2\" = \"orange\")) +\n  theme_minimal()\n\ndata2 &lt;- data.frame(\n  category = rep(LETTERS[1:5], each = 3),\n  subcategory = rep(c(\"X\", \"Y\", \"Z\"), 5),\n  value = sample(10:100, 15, replace = TRUE)\n)\n\nchart2 &lt;- ggplot(data2, aes(x = category, y = value, fill = subcategory)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Stacked Bar Chart\", x = \"Category\", y = \"Value\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_minimal()\n\ndata3 &lt;- data.frame(\n  category = LETTERS[1:7],\n  value = sort(sample(20:100, 7), decreasing = TRUE)\n)\n\nchart3 &lt;- ggplot(data3, aes(x = reorder(category, -value), y = value)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Horizontal Bar Chart\", x = \"Category\", y = \"Value\") +\n  theme_minimal()\n\ndata4 &lt;- data.frame(\n  category = factor(rep(c(\"A\", \"B\", \"C\", \"D\"), 3)),\n  value = sample(20:100, 12, replace = TRUE)\n)\n\nchart4 &lt;- ggplot(data4, aes(x = category, y = value)) +\n  geom_bar(stat = \"identity\", fill = \"lightgreen\") +\n  labs(title = \"Vertical Bar Chart\", x = \"Category\", y = \"Value\") +\n  theme_minimal()\n\n# 차트 출력\nprint(chart1)\n\n\n\nprint(chart2)\n\n\n\nprint(chart3)\n\n\n\nprint(chart4)"
  },
  {
    "objectID": "assignment7.html",
    "href": "assignment7.html",
    "title": "assignment7",
    "section": "",
    "text": "# Required libraries\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# Sample data generation (replace with your actual data)\nset.seed(123)\ndata &lt;- data.frame(\n  x = rnorm(100),\n  y = rnorm(100),\n  size = abs(rnorm(100)) * 10  # for bubble chart\n)\n\n# UI Definition\nui &lt;- fluidPage(\n    titlePanel(\"Interactive Data Visualization Dashboard\"),\n    \n    sidebarLayout(\n        sidebarPanel(\n            selectInput(\"chart_type\", \"Select Chart:\",\n                       choices = c(\"Scatter Plot (Chart 9)\", \n                                 \"Bubble Chart (Chart 18)\",\n                                 \"Additional Chart\")),\n            # Interactive controls\n            sliderInput(\"point_size\", \"Point Size:\",\n                       min = 1, max = 10, value = 3),\n            selectInput(\"color_scheme\", \"Color Theme:\",\n                       choices = c(\"Default\", \"Blue Scale\", \"Red Scale\"))\n        ),\n        \n        mainPanel(\n            plotlyOutput(\"plot\")\n        )\n    )\n)\n\n# Server Logic\nserver &lt;- function(input, output) {\n    output$plot &lt;- renderPlotly({\n        p &lt;- if(input$chart_type == \"Scatter Plot (Chart 9)\") {\n            # Scatter plot implementation\n            ggplot(data, aes(x = x, y = y)) +\n                geom_point(size = input$point_size) +\n                labs(title = \"Scatter Plot\",\n                     x = \"X Variable\",\n                     y = \"Y Variable\") +\n                theme_minimal()\n            \n        } else if(input$chart_type == \"Bubble Chart (Chart 18)\") {\n            # Bubble chart implementation\n            ggplot(data, aes(x = x, y = y, size = size)) +\n                geom_point(alpha = 0.6) +\n                labs(title = \"Bubble Chart\",\n                     x = \"X Variable\",\n                     y = \"Y Variable\",\n                     size = \"Size\") +\n                theme_minimal()\n        } else {\n            # Additional chart implementation\n            ggplot(data, aes(x = x)) +\n                geom_histogram(binwidth = 0.5) +\n                labs(title = \"Histogram\",\n                     x = \"Value\",\n                     y = \"Frequency\") +\n                theme_minimal()\n        }\n        \n        # Apply color theme\n        if(input$color_scheme == \"Blue Scale\") {\n            p &lt;- p + scale_color_brewer(palette = \"Blues\")\n        } else if(input$color_scheme == \"Red Scale\") {\n            p &lt;- p + scale_color_brewer(palette = \"Reds\")\n        }\n        \n        ggplotly(p)  # Convert to interactive plot\n    })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "assignment6.html",
    "href": "assignment6.html",
    "title": "assignment6",
    "section": "",
    "text": "# Required libraries\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# Sample data generation (replace with your actual data).\nset.seed(123)\ndata &lt;- data.frame(\n  x = rnorm(100),\n  y = rnorm(100),\n  size = abs(rnorm(100)) * 10  # for bubble chart\n)\n\n# UI Definition\nui &lt;- fluidPage(\n    titlePanel(\"Interactive Data Visualization Dashboard\"),\n    \n    sidebarLayout(\n        sidebarPanel(\n            selectInput(\"chart_type\", \"Select Chart:\",\n                       choices = c(\"Scatter Plot (Chart 9)\", \n                                 \"Bubble Chart (Chart 18)\",\n                                 \"Additional Chart\")),\n            # Interactive controls\n            sliderInput(\"point_size\", \"Point Size:\",\n                       min = 1, max = 10, value = 3),\n            selectInput(\"color_scheme\", \"Color Theme:\",\n                       choices = c(\"Default\", \"Blue Scale\", \"Red Scale\"))\n        ),\n        \n        mainPanel(\n            plotlyOutput(\"plot\")\n        )\n    )\n)\n\n# Server Logic\nserver &lt;- function(input, output) {\n    output$plot &lt;- renderPlotly({\n        p &lt;- if(input$chart_type == \"Scatter Plot (Chart 9)\") {\n            # Scatter plot implementation\n            ggplot(data, aes(x = x, y = y)) +\n                geom_point(size = input$point_size) +\n                labs(title = \"Scatter Plot\",\n                     x = \"X Variable\",\n                     y = \"Y Variable\") +\n                theme_minimal()\n            \n        } else if(input$chart_type == \"Bubble Chart (Chart 18)\") {\n            # Bubble chart implementation\n            ggplot(data, aes(x = x, y = y, size = size)) +\n                geom_point(alpha = 0.6) +\n                labs(title = \"Bubble Chart\",\n                     x = \"X Variable\",\n                     y = \"Y Variable\",\n                     size = \"Size\") +\n                theme_minimal()\n        } else {\n            # Additional chart implementation\n            ggplot(data, aes(x = x)) +\n                geom_histogram(binwidth = 0.5) +\n                labs(title = \"Histogram\",\n                     x = \"Value\",\n                     y = \"Frequency\") +\n                theme_minimal()\n        }\n        \n        # Apply color theme\n        if(input$color_scheme == \"Blue Scale\") {\n            p &lt;- p + scale_color_brewer(palette = \"Blues\")\n        } else if(input$color_scheme == \"Red Scale\") {\n            p &lt;- p + scale_color_brewer(palette = \"Reds\")\n        }\n        \n        ggplotly(p)  # Convert to interactive plot\n    })\n}\n\n# Run the application\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "assignment8.html",
    "href": "assignment8.html",
    "title": "assignment8",
    "section": "",
    "text": "about.html\nassignment1_files\nassignment1.html\nassignment2_files\nassignment2.html\nassignment3_files\nassignment3.html\nassignment4_files\nassignment4.html\nassignment5_files\nassignment5.html\nassignment6.html\nassignment7.html\nassignment8.htm\nassignment8.html\nassignmnet5_files\nassignmnet5.html\nimages\nindex_files\nindex.html\nsearch.json\nsite_libs\nstyles.css"
  },
  {
    "objectID": "assignment8.html#section",
    "href": "assignment8.html#section",
    "title": "assignment8",
    "section": "",
    "text": "about.html\nassignment1_files\nassignment1.html\nassignment2_files\nassignment2.html\nassignment3_files\nassignment3.html\nassignment4_files\nassignment4.html\nassignment5_files\nassignment5.html\nassignment6.html\nassignment7.html\nassignment8.htm\nassignment8.html\nassignmnet5_files\nassignmnet5.html\nimages\nindex_files\nindex.html\nsearch.json\nsite_libs\nstyles.css"
  }
]